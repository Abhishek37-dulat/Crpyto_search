{"version":3,"sources":["Coin.js","App.js","reportWebVitals.js","index.js"],"names":["coin","name","image","symbol","price","volume","priceChange","marketcap","className","src","alt","toLocaleString","toFixed","App","useState","coins","setCoins","search","setSearch","useEffect","axios","get","then","res","data","catch","error","console","log","filteredCoins","filter","toLowerCase","includes","type","placeholder","onChange","e","target","value","map","market_cap","current_price","price_change_percentage_24h","total_volume","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPA8BeA,EA3BF,SAAC,GACe,IADdC,EACa,EADbA,KAAMC,EACO,EADPA,MAAOC,EACA,EADAA,OAAQC,EACR,EADQA,MAAOC,EACf,EADeA,OAC3CC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,UACT,OACI,qBAAKC,UAAU,iBAAf,SACI,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,OAAf,UACI,qBAAKC,IAAKP,EAAOQ,IAAI,WACrB,6BAAKT,IACL,mBAAGO,UAAU,cAAb,SAA4BL,OAEhC,sBAAKK,UAAU,YAAf,UACI,oBAAGA,UAAU,aAAb,cAA4BJ,KAC5B,oBAAGI,UAAU,cAAb,cAA6BH,EAAOM,oBACnCL,EAAc,EACX,oBAAGE,UAAU,mBAAb,UAAiCF,EAAYM,QAAQ,GAArD,OAEJ,oBAAGJ,UAAU,qBAAb,UAAmCF,EAAYM,QAAQ,GAAvD,OAEA,oBAAGJ,UAAU,iBAAb,uBACeD,EAAUI,6BCkC9BE,MAhDf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACRC,IAAMC,IAAI,4HACTC,MAAK,SAAAC,GACJP,EAASO,EAAIC,SACZC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAC7B,IAEH,IAIMG,EAAgBd,EAAMe,QAAO,SAAA9B,GAAI,OACrCA,EAAKC,KAAK8B,cAAcC,SAASf,EAAOc,kBAI1C,OACE,sBAAKvB,UAAU,WAAf,UACE,sBAAKA,UAAU,cAAf,UACE,oBAAIA,UAAU,YAAd,+BACA,+BACE,uBAAOyB,KAAK,OAAOC,YAAY,SAC/B1B,UAAU,aAAa2B,SAfX,SAAAC,GAClBlB,EAAUkB,EAAEC,OAAOC,eAkBhBT,EAAcU,KAAI,SAAAvC,GACjB,OACE,cAAC,EAAD,CAEAC,KAAMD,EAAKC,KACXC,MAAOF,EAAKE,MACZC,OAAQH,EAAKG,OACbI,UAAWP,EAAKwC,WAChBpC,MAAOJ,EAAKyC,cACZnC,YAAaN,EAAK0C,4BAClBrC,OAAQL,EAAK2C,cAPR3C,EAAK4C,WC7BLC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.04d79e18.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Coin.css'\r\n\r\nconst coin = ({name, image, symbol, price, volume,\r\npriceChange, marketcap}) => {\r\n    return (\r\n        <div className='coin-container'>\r\n            <div className=\"coin-row\">\r\n                <div className=\"coin\">\r\n                    <img src={image} alt=\"crypto\" />\r\n                    <h1>{name}</h1>\r\n                    <p className=\"coin-symbol\">{symbol}</p>\r\n                </div>\r\n                <div className=\"coin-data\">\r\n                    <p className=\"coin-price\">${price}</p>\r\n                    <p className=\"coin-volume\">${volume.toLocaleString()}</p>\r\n                    {priceChange < 0 ? (\r\n                        <p className=\"coin-percent red\">{priceChange.toFixed(2)}%</p>\r\n                    ):(\r\n                    <p className=\"coin-percent green\">{priceChange.toFixed(2)}%</p>\r\n                    )}\r\n                    <p className=\"coin-marketcap\">\r\n                        Mkt Cap: ${marketcap.toLocaleString()}\r\n                    </p>\r\n                </div>\r\n            </div>            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default coin\r\n","import React,{useState, useEffect} from 'react'; \nimport './App.css';\nimport axios from 'axios';\nimport Coin from './Coin';\n\n\n\n\nfunction App() {\n  const [coins, setCoins] = useState([]);\n  const [search, setSearch] = useState('');\n\n  useEffect(()=>{\n    axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=inr&order=market_cap_desc&per_page=100&page=1&sparkline=false')\n    .then(res=>{\n      setCoins(res.data);\n    }).catch(error => console.log(error));\n  }, []);\n\n  const handleChange= e =>{\n    setSearch(e.target.value)\n  }\n\n  const filteredCoins = coins.filter(coin =>\n    coin.name.toLowerCase().includes(search.toLowerCase())\n    )\n\n\n  return (\n    <div className=\"coin-app\">\n      <div className=\"coin-search\">\n        <h1 className=\"coin-text\">Search a currency</h1>\n        <form>\n          <input type=\"text\" placeholder=\"search\" \n          className=\"coin-input\" onChange=\n          {handleChange} />\n        </form>  \n      </div>\n      {filteredCoins.map(coin => {\n        return (\n          <Coin \n          key={coin.id} \n          name={coin.name} \n          image={coin.image}\n          symbol={coin.symbol}\n          marketcap={coin.market_cap}\n          price={coin.current_price}\n          priceChange={coin.price_change_percentage_24h}\n          volume={coin.total_volume}\n          />\n        )\n      })}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}